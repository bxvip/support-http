apply plugin: 'java'
apply plugin: 'kotlin'

apply plugin: 'com.github.dcendents.android-maven'


def modelName = getName()

def modelConfig = libModelConfigs[modelName]

group = GROUP
version = modelConfig['libVersionName']

def isDebug = modelConfig['libVersionName'].contains("SNAPSHOT") == true

sourceCompatibility = 1.8 // java 8
targetCompatibility = 1.8

dependencies {
    compileOnly files(androidJar)
    compileOnly httpLibs
    compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    compileOnly 'com.github.bxvip:android-support:26.0.2.8'
    compileOnly repluginplugin
}

// 移除 debug label icon
task buildConfig() {
    doLast {
        // 找到编译好的文件路径
        def path = "$projectDir/src/main/java/co/bxvip/android/commonlib/http/BuildConfig.java"
        println(path)
        def sourceFile = new File(path)
        if (sourceFile.exists()) {
            //读取文件，并装进List。
            def list = []
            sourceFile.withReader('UTF-8') { reader ->
                reader.eachLine {
                    if (it.contains('Boolean.parseBoolean')) {
                        if (isDebug) {
                            list.add("    public static final boolean DEBUG = Boolean.parseBoolean(\"true\");\n")
                        } else {
                            list.add("    public static final boolean DEBUG = Boolean.parseBoolean(\"false\");\n")
                        }
                    } else {
                        list.add(it + "\n")
                    }
                }
            }
            sourceFile.withWriter('UTF-8') { writer ->
                list.each {
                    writer.write(it)
                }
            }
        }
    }
}
//compileKotlin

afterEvaluate {
    tasks.matching {
        // processDebugManifest
        it.name.startsWith('compileKotlin')
    }.each { tk ->
        tk.dependsOn(buildConfig)
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}


artifacts {
    archives jar
    archives sourcesJar
}
